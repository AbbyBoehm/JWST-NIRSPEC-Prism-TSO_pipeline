# Juniper config file for launching Stage 4: Extraction

# Setup for Stage 4
toplevel_dir    ''                                          # Top-level directory for all files in this project. The input and output files should be here.
input           'reduced'                                   # The sub-directory relative to the top-level directory where your input *reduced.nc files are.
output          'extracted'                                 # The sub-directory relative to the top-level directory where your output *1Dspec.nc files will be saved.
run_name        None                                        # str or None. You can use this to open sub-folders in the output folder if you wanted to rerun (e.g. have output/run1 and output/run2).
CRDS_PATH       None                                        # str or None. If you already have a crds_cache directory, point to its absolute path here. Otherwise, a crds_cache will be opened in the current working directory.
max_cores       'half'                                      # integer or 'quarter', 'half', 'all'. How many cores to use for multiprocessing.
verbose         2                                           # Int from 0 to 2. 0 = print nothing. 1 = print some statements. 2 = print every action.
show_plots      0                                           # Int from 0 to 2. 0 = show nothing. 1 = show some plots. 2 = show all plots.
save_plots      1                                           # Int from 0 to 2. 0 = save nothing. 1 = save some plots. 2 = save all plots.
diagnostics     'extracted/diagnostics'                     # str. If save_plots >= 1, diagnostic plots will be written to this folder.
rename          None                                        # str. What you want to rename the files to. Can be None to keep the default name. Suggestions include naming the files after the target planet and program ID (e.g. 'PLANET-B_ID12345').

# Step 1: Extract 1D spectrum
extract_method  'box'                                       # str. Options are 'box' (for an unweighted sum) and 'optimum' (for a weighted sum, see Horne 1986).
wavelengths     (0.50, 6.00)                                # tuple of float. If not None, limit 1D extraction to between these wavelengths in micron.
mask_bad_pix    False                                       # bool. If True, fully masks any pixels flagged by the data quality array. Useful if, in Stage 3, you did not replace bad pixels.

# Step 1a: Box extraction
aperture        (10,18)                                     # tuple of int. Defines the lower and upper row bounding the extraction aperture.

# Step 1b: Optimum extraction
aperture_type   'median'                                    # str. Defines the kind of spatial profile P to build for optimum extraction. Options are 'median' (use median integration), 'polyrow' (polynomial fit on rows), 'polycol' (polynomial fit on columns), 'gaussian' (gaussian fit on columns).
poly_order      7                                           # int. Order of polynomial to fit, only used for 'polyrow' and 'polycol'.

# Step 2: Align spectra
align           True                                        # bool. Whether to align the extracted 1D spectra.
trim_spec       80                                          # int. How many points to trim from the edges of the spectra. Useful for ensuring meeasured shifts are not dominated by the flux falloff at the edges.
high_res_factor 0.0001                                      # float. How finely to interpolate spectra when aligning. The smaller this is, the finer the fit but the longer the runtime.
trim_fit        80                                          # int. How many points to trim from the edges of the fit. Useful for ensuring meeasured shifts are not dominated by the flux falloff at the edges.

# Step 3: Clean spectra
sigma           3.5                                         # float. Sigma at which to detect a spectral outlier and replace it with the median in time. Enter None to skip this step.

# ENDPARSE